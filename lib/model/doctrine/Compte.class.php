<?php

/**
 * Compte
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Comptes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Compte extends BaseCompte
{
	public function __toString()
	{
		return $this->getNom();
	}

	/**
    * 
    * Retourne le montant du compte courant
    */
	public function getCompteCourant()
    {
    	$query = Doctrine_Query::create()
    		->select('ROUND(SUM(credit),2) AS totalCreditTraite, ROUND(SUM(debit),2) AS totalDebitTraite')
    		->from('Mouvement')
    		->where('compte_id = ?', $this->getId())
    		->andWhere('traite = 1');

   		return $query->execute();	
    }
    
   /**
    * 
    * Retourne le montant du compte prÃ©visionnel
    */
	public function getComptePrevisionnel()
    {
    	$query = Doctrine_Query::create()
    		->select('ROUND(SUM(credit),2) AS totalCredit, ROUND(SUM(debit),2) AS totalDebit')
    		->from('Mouvement')
    		->where('compte_id = ?', $this->getId());

   		return $query->execute();	
    }
    
	/**
    * 
    * Retourne les 20 derniers mouvements du compte
    */
	public function getTwentyMouvements()
    {
    	$query = Doctrine_Query::create()
    		->from('Mouvement m')
    		->where('m.compte_id = ?', $this->getId())
    		->orderBy('m.date DESC')
    		->limit(20);

   		return $query->execute();	
    }
 
	public function getMouvementsQuery()
	{
	  $q = Doctrine_Query::create()
	    ->from('Mouvement m')
	    ->where('m.compte_id = ?', $this->getId());
	 
	  return Doctrine_Core::getTable('Mouvement')->addMouvementsQuery($q);
	}

	public function getMouvements($max = 20) 
	{ 
      $q = $this->getMouvementsQuery() 
      ->limit($max);
	
	  return $q->execute();
	}
	
	public function countMouvements()
	{
	  return $this->getMouvementsQuery()->count();
	}

	public function setUp()
    {
        parent::setUp();
        $this->hasMany('Mouvement as Mouvements', array(
             'local' 	=> 'id',
             'foreign'	=> 'compte_id',
        	 'orderBy'	=> 'date DESC'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
